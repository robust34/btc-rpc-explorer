extends layout

block headContent
	title Home
	
block content
	h1(class="h3") #{coinConfig.siteTitle}
	hr

	if (config.demoSite && session.hideHomepageBanner != "true")
		div(class="alert alert-primary alert-dismissible", role="alert")
			p
				strong #{coinConfig.siteTitle}
				span  is 
				a(href="https://github.com/janoside/btc-rpc-explorer") open-source
				span  and easy to set up. It can communicate with your 
				a(href=coinConfig.nodeUrl) #{coinConfig.name} Full Node
				span  via RPC. See the 
				a(href="https://github.com/janoside/btc-rpc-explorer") project description
				span  for a list of features and instructions for running.

			div(style="height: 34px;")
				a(class="github-button", href="https://github.com/janoside/btc-rpc-explorer", data-icon="octicon-star", data-size="large", data-show-count="true", aria-label="Star janoside/btc-rpc-explorer on GitHub", style="padding-right: 10px;") Star
				
				span    
				a(class="github-button", href="https://github.com/janoside/btc-rpc-explorer/fork", data-icon="octicon-repo-forked", data-size="large", data-show-count="true", aria-label="Fork janoside/btc-rpc-explorer on GitHub") Fork

			a(href="/changeSetting?name=hideHomepageBanner&value=true", class="close", aria-label="Close", style="text-decoration: none;")
				span(aria-hidden="true") &times;

	div(class="card mb-3")
		div(class="card-header")
			h2(class="h6 mb-0") Network Summary
		div(class="card-body")
			table(class="table table-responsive-sm")
				thead
					tr
						th Hashrate
						if (getblockchaininfo.size_on_disk)
							th Blockchain Size

						th Difficulty
						th Mempool Size

				tbody(class="monospace")
					tr
						- var hashrateData = utils.formatHashrate(miningInfo.networkhashps, 3);
						td
							span #{hashrateData[0]} 
							span(title=(hashrateData[1].name + "-hash / x10^" + hashrateData[1].exponent), data-toggle="tooltip") #{hashrateData[1].abbreviation}H
							span /s
						td #{utils.formatBytes(getblockchaininfo.size_on_disk)}
							span(class="text-muted")  (pruned: #{getblockchaininfo.pruned})

						td
							- var difficultyData = utils.formatDifficulty(getblockchaininfo.difficulty, 3);
							
							span(title=parseFloat(getblockchaininfo.difficulty).toLocaleString(), data-toggle="tooltip")
								span #{difficultyData[0]}
								span  x 10
								sup #{difficultyData[1].exponent}

						td #{mempoolInfo.size.toLocaleString()} tx 
							span(class="text-muted") (#{mempoolInfo.usage.toLocaleString()} bytes)
	
	if (latestBlocks)
		div(class="card mb-3")
			div(class="card-header")
				div(class="row")
					div(class="col")
						h2(class="h6 mb-0") Latest Blocks
							if (getblockchaininfo.initialblockdownload)
								small  (#{(getblockchaininfo.headers - getblockchaininfo.blocks).toLocaleString()} behind)

					div(class="col")
						span(style="float: right;")
							a(href="/blocks") Browse Blocks &raquo;

			div(class="card-body")

				- var blocks = latestBlocks;
				- var blockOffset = 0;

				include includes/blocks-list.pug


	if (chainTxStats)
		div(class="card mb-3")
			div(class="card-header")
				h2(class="h6 mb-0") Transaction Stats
		
			div(class="card-body")
				table(class="table table-responsive-sm text-right")
					thead
						tr
							th
							each item, index in chainTxStatsLabels
								th #{item}
					tbody
						tr
							th(class="text-left") Count
							each item, index in chainTxStats
								td(class="monospace") #{item.window_tx_count.toLocaleString()}

						tr
							th(class="text-left") Rate
							each item, index in chainTxStats
								td(class="monospace") #{new Decimal(item.txrate).toDecimalPlaces(4)}

block endOfBody
	script(async, defer, src="https://buttons.github.io/buttons.js")