extends layout

block headContent
	title Node Status
	
block content
	h1.h3 Node Status
	hr

	if (getblockchaininfo)
		if (false)
			p Data from RPC commands 
				a(href="./rpc-browser?method=getblockchaininfo") getblockchaininfo
				span , 
				a(href="./rpc-browser?method=getnetworkinfo") getnetworkinfo
				span , and 
				a(href="./rpc-browser?method=getnettotals") getnettotals

		if (false)
			pre
				code.json.bg-light #{JSON.stringify(getblockchaininfo, null, 4)}

		ul.nav.nav-tabs.mb-3
			li.nav-item
				a.nav-link.active(data-bs-toggle="tab", href="#tab-details", role="tab") Details
			li.nav-item
				a.nav-link(data-bs-toggle="tab", href="#tab-json", role="tab") JSON


		div.tab-content
			div.tab-pane.active(id="tab-details", role="tabpanel")
				div.card.rounded-lg.shadow-sm.mb-3
					div.card-body.px-2.px-sm-3
						h3.h6.mb-0 Node Summary
						hr

						div.clearfix
							div.row
								div.summary-table-label Version
								div.summary-table-content.font-monospace #{getnetworkinfo.version} (#{getnetworkinfo.subversion})

							div.row
								div.summary-table-label Protocol Version
								div.summary-table-content.font-monospace #{getnetworkinfo.protocolversion}

							div.row
								div.summary-table-label Status
								div.summary-table-content.font-monospace
									if (getblockchaininfo.initialblockdownload || getblockchaininfo.headers > getblockchaininfo.blocks)
										span Initial block download progress #{(100 * getblockchaininfo.verificationprogress).toLocaleString()}%
									else
										span.text-success Synchronized with network

							div.row
								div.summary-table-label Uptime
								div.summary-table-content.font-monospace
									- var startTimeAgo = moment.duration(uptimeSeconds * 1000);
									span #{startTimeAgo.format()}

							div.row
								div.summary-table-label Warnings
								div.summary-table-content.font-monospace
									if (getblockchaininfo.warnings && getblockchaininfo.warnings.trim().length > 0)
										span.text-danger #{getblockchaininfo.warnings}
									else
										span.text-success None

				div.card.shadow-sm.mb-3
					div.card-body.px-2.px-sm-3
						h3.h6.mb-0 Blockchain Summary
						hr

						div.clearfix
							div.row
								div.summary-table-label Chain
								div.summary-table-content.font-monospace #{getblockchaininfo.chain}

							div.row
								div.summary-table-label Block Count
								div.summary-table-content.font-monospace #{getblockchaininfo.blocks.toLocaleString()}
									br
									span.text-muted (headers: #{getblockchaininfo.headers.toLocaleString()})

							div.row
								div.summary-table-label Difficulty
								div.summary-table-content.font-monospace
									- var difficultyData = utils.formatLargeNumber(getblockchaininfo.difficulty, 3);
									span.border-dotted(title=parseFloat(getblockchaininfo.difficulty).toLocaleString(), data-bs-toggle="tooltip")
										span #{difficultyData[0]}
										span  x 10
										sup #{difficultyData[1].exponent}

							if (getblockchaininfo.softforks)
								- var forkUrls = {"bip34":"https://github.com/bitcoin/bips/blob/master/bip-0034.mediawiki", "bip65":"https://github.com/bitcoin/bips/blob/master/bip-0065.mediawiki", "bip66":"https://github.com/bitcoin/bips/blob/master/bip-0066.mediawiki", "csv":"https://github.com/bitcoin/bips/blob/master/bip-0112.mediawiki", "segwit":"https://github.com/bitcoin/bips/blob/master/bip-0141.mediawiki", "taproot":"https://github.com/bitcoin/bips/blob/master/bip-0341.mediawiki"};
								div.row
									div.summary-table-label Soft Forks
									div.summary-table-content.font-monospace
										ul.list-unstyled
											each item, itemName in getblockchaininfo.softforks
												li
													div.d-inline-block.text-end(style="width: 75px;")
														if (forkUrls[itemName])
															a.fw-bold(href=forkUrls[itemName]) #{itemName}
															| :&nbsp;
														else
															span.fw-bold #{itemName}
															| :&nbsp;
													
													if (item.type == "bip9")
														span.me-2.ms-2 #{item.type} - #{JSON.stringify(item.bip9)}

													if (item.active)
														span.me-2
															span.text-success active
															small.text-muted.ms-2 (since: #
																a(href=`./block-height/${item.height}`) #{item.height.toLocaleString()}
																| )

							if (getblockchaininfo.size_on_disk)
								- var sizeData = utils.formatLargeNumber(getblockchaininfo.size_on_disk, 2);

								div.row
									div.summary-table-label Blockchain Size
									div.summary-table-content.font-monospace #{sizeData[0]} #{sizeData[1].abbreviation}B

							if (getblockchaininfo.pruned)
								div.row
									div.summary-table-label
										span.border-dotted(title="Whether your node prunes the blockchain. With pruning active, your node will delete some data that is non-essential for future verification needs, in order to reduce disk usage.", data-bs-toggle="tooltip") Pruning?
									div.summary-table-content.font-monospace
										span.fw-bold Yes
										br
										span.border-dotted(title="This is the latest block for which your node has all block data; blocks older than this one have had some or all non-essential details deleted via pruning.", data-bs-toggle="tooltip") Prune height

										span : #{getblockchaininfo.pruneheight.toLocaleString()}

										br

										span.border-dotted(title="This is the approximate amount of non-essential blockchain data that your node will store.", data-bs-toggle="tooltip") Prune target size

										span :&nbsp;
											- var pruneTargetSize = utils.formatLargeNumber(getblockchaininfo.prune_target_size, 2);
									
											span #{pruneTargetSize[0]} #{pruneTargetSize[1].abbreviation}B

							div.row
								div.summary-table-label Indexes
								div.summary-table-content.font-monospace
									ul.list-unstyled
										li
											span.fw-bold txindex
											| :&nbsp;
											if (getindexinfo.txindex)
												span.text-success available
											else
												span.text-danger.border-dotted(title="Your node's lack of a 'transaction index' means this explorer will be unable to show all blockchain data. See the project README for more details.", data-bs-toggle="tooltip") unavailable

										li
											span.fw-bold blockfilterindex
											| :&nbsp;
											if (getindexinfo["basic block filter index"])
												span.text-success available
											else
												span.text-danger unavailable


				div.card.shadow-sm.mb-3
					div.card-body.px-2.px-sm-3
						h3.h6.mb-0 Network Summary
						hr

						div.clearfix
							div.row
								div.summary-table-label Host : Port
								div.summary-table-content.font-monospace #{global.rpcClient.host + " : " + global.rpcClient.port}

							div.row
								div.summary-table-label Peers
								div.summary-table-content.font-monospace
									span #{getnetworkinfo.connections.toLocaleString()}

									if (getnetworkinfo.connections_in)
										br
										span.text-muted (#{getnetworkinfo.connections_in.toLocaleString()} in; #{getnetworkinfo.connections_out.toLocaleString()} out)

							div.row
								div.summary-table-label Network Traffic
								div.summary-table-content.font-monospace
									- var downData = utils.formatLargeNumber(getnettotals.totalbytesrecv, 2);
									- var downRateData = utils.formatLargeNumber(getnettotals.totalbytesrecv / uptimeSeconds, 2);
									- var upData = utils.formatLargeNumber(getnettotals.totalbytessent, 2);
									- var upRateData = utils.formatLargeNumber(getnettotals.totalbytessent / uptimeSeconds, 2);

									span Total Download: #{downData[0]} #{downData[1].abbreviation}B
									span.text-muted  (avg #{downRateData[0]} #{downRateData[1].abbreviation}B/s)
									br
									span Total Upload: #{upData[0]} #{upData[1].abbreviation}B
									span.text-muted  (avg #{upRateData[0]} #{upRateData[1].abbreviation}B/s)

							if (getnetworkinfo.networks)
								div.row
									div.summary-table-label Interfaces
									div.summary-table-content.font-monospace
										each item, index in getnetworkinfo.networks
											div
												div.d-inline-block.text-end(style="width: 75px;")
													span.fw-bold #{item.name}
													| :&nbsp;
													
												if (item.reachable)
													span.text-success reachable

												else
													span.text-danger unreachable

												if (item.proxy)
													span.text-muted.ms-3 (proxy: #{item.proxy})

							if (getnetworkinfo.localaddresses)
								div.row
									div.summary-table-label Local Addresses
									div.summary-table-content.font-monospace
										each item, index in getnetworkinfo.localaddresses
											div #{item.address}:#{item.port}
												span.text-muted.ms-3 (score: #{item.score.toLocaleString()})
							

			div.tab-pane(id="tab-json", role="tabpanel")

				ul.nav.nav-pills.mb-3
					li.nav-item
						a.nav-link.active(data-bs-toggle="tab", href="#tab-getblockchaininfo", role="tab") getblockchaininfo
					li.nav-item
						a.nav-link(data-bs-toggle="tab", href="#tab-getnettotals", role="tab") getnettotals
					li.nav-item
						a.nav-link(data-bs-toggle="tab", href="#tab-getnetworkinfo", role="tab") getnetworkinfo
					li.nav-item
						a.nav-link(data-bs-toggle="tab", href="#tab-getindexinfo", role="tab") getindexinfo
				
				div.tab-content
					div.tab-pane.active(id="tab-getblockchaininfo", role="tabpanel")
						div.card.shadow-sm.mb-3
							div.card-body
								h4.h6.mb-0 getblockchaininfo
								hr

								div.highlight
									pre
										code.json.bg-light(data-lang="json") #{JSON.stringify(getblockchaininfo, null, 4)}

					div.tab-pane(id="tab-getnettotals", role="tabpanel")
						div.card.shadow-sm.mb-3
							div.card-body
								h4.h6.mb-0 getnettotals
								hr

								div.highlight
									pre
										code.json.bg-light(data-lang="json") #{JSON.stringify(getnettotals, null, 4)}

					div.tab-pane(id="tab-getnetworkinfo", role="tabpanel")
						div.card.shadow-sm.mb-3
							div.card-body
								h4.h6.mb-0 getnetworkinfo
								hr

								div.highlight
									pre
										code.json.bg-light(data-lang="json") #{JSON.stringify(getnetworkinfo, null, 4)}

					div.tab-pane(id="tab-getindexinfo", role="tabpanel")
						div.card.shadow-sm.mb-3
							div.card-body
								h4.h6.mb-0 getindexinfo
								hr

								div.highlight
									pre
										code.json.bg-light(data-lang="json") #{JSON.stringify(global.getindexinfo, null, 4)}
							
										
