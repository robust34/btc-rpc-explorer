extends layout

block headContent
	title Node Status
	
block content
	h1.h3 Node Status
	hr

	if (getblockchaininfo)
		if (false)
			p Data from RPC commands 
				a(href="/rpc-browser?method=getblockchaininfo") getblockchaininfo
				span , 
				a(href="/rpc-browser?method=getnetworkinfo") getnetworkinfo
				span , and 
				a(href="/rpc-browser?method=getnettotals") getnettotals

		if (false)
			pre
				code.json.bg-light #{JSON.stringify(getblockchaininfo, null, 4)}

		ul.nav.nav-tabs.mb-3
			li.nav-item
				a.nav-link.active(data-toggle="tab", href="#tab-details", role="tab") Details
			li.nav-item
				a.nav-link(data-toggle="tab", href="#tab-json", role="tab") JSON


		div.tab-content
			div.tab-pane.active(id="tab-details", role="tabpanel")
				div.card.shadow-sm.mb-3
					div.card-body.px-2.px-sm-3
						h3.h6.mb-0 Summary
						hr

						table(class="table details-table mb-0")
							tr
								td.properties-header Host : Port
								td.text-monospace #{global.rpcClient.host + " : " + global.rpcClient.port}

							tr
								td.properties-header Chain
								td.text-monospace #{getblockchaininfo.chain}
							tr
								td.properties-header Version
								td.text-monospace #{getnetworkinfo.version}
									span(class="text-monospace")  (#{getnetworkinfo.subversion})
							tr
								td.properties-header Protocol Version
								td.text-monospace #{getnetworkinfo.protocolversion}

							if (getblockchaininfo.size_on_disk)
								- var sizeData = utils.formatLargeNumber(getblockchaininfo.size_on_disk, 2);
								tr
									td.properties-header Blockchain Size
									td.text-monospace #{sizeData[0]} #{sizeData[1].abbreviation}B
										br
										span.text-muted  (pruned: #{getblockchaininfo.pruned})

							if (getblockchaininfo.softforks)
								tr
									td.properties-header Soft Forks
									td.text-monospace
										ul.list-unstyled
											each item, itemName in getblockchaininfo.softforks
												li
													div.d-inline-block.text-right(style="width: 75px;")
														span #{itemName}:
													
													span.mr-2.ml-2 type=#{item.type},

													if (item.active)
														span.mr-2
															span status=
															span.text-success active
															small.text-muted.ml-2 (height: #{item.height.toLocaleString()})
							
							tr
								td.properties-header Block Count
								td.text-monospace #{getblockchaininfo.blocks.toLocaleString()}
									br
									span.text-muted (headers: #{getblockchaininfo.headers.toLocaleString()})
							tr
								td.properties-header Difficulty
								td.text-monospace
									- var difficultyData = utils.formatLargeNumber(getblockchaininfo.difficulty, 3);
									
									span(title=parseFloat(getblockchaininfo.difficulty).toLocaleString(), data-toggle="tooltip")
										span #{difficultyData[0]}
										span  x 10
										sup #{difficultyData[1].exponent}

							tr
								td.properties-header Status
								td.text-monospace
									if (getblockchaininfo.initialblockdownload || getblockchaininfo.headers > getblockchaininfo.blocks)
										span Initial block download progress #{(100 * getblockchaininfo.verificationprogress).toLocaleString()}%
									else
										span Synchronized with network

							tr
								- var startTimeAgo = moment.duration(uptimeSeconds * 1000);
								td.properties-header Uptime
								td.text-monospace #{startTimeAgo.format()}

							tr
								td.properties-header Warnings
								td.text-monospace
									if (getblockchaininfo.warnings && getblockchaininfo.warnings.trim().length > 0)
										span #{getblockchaininfo.warnings}
									else
										span None

				div.card.shadow-sm.mb-3
					div.card-body.px-2.px-sm-3
						h3.h6.mb-0 Network Info
						hr
							
						table.table.details-table.mb-0
							tr
								td.properties-header Peers
								td.text-monospace #{getnetworkinfo.connections.toLocaleString()}

							tr
								td.properties-header Network Traffic
								td.text-monospace
									- var downData = utils.formatLargeNumber(getnettotals.totalbytesrecv, 2);
									- var downRateData = utils.formatLargeNumber(getnettotals.totalbytesrecv / uptimeSeconds, 2);
									- var upData = utils.formatLargeNumber(getnettotals.totalbytessent, 2);
									- var upRateData = utils.formatLargeNumber(getnettotals.totalbytessent / uptimeSeconds, 2);

									span Total Download: #{downData[0]} #{downData[1].abbreviation}B
									span.text-muted  (avg #{downRateData[0]} #{downRateData[1].abbreviation}B/s)
									br
									span Total Upload: #{upData[0]} #{upData[1].abbreviation}B
									span.text-muted  (avg #{upRateData[0]} #{upRateData[1].abbreviation}B/s)

							if (global.getnetworkinfo.networks)
								tr
									td.properties-header Interfaces
									td.text-monospace
										each item, index in global.getnetworkinfo.networks
											div
												span.font-weight-bold #{item.name}: 
												if (item.reachable)
													span reachable
														i.fa.fa-check.ml-2.text-success

												else
													span unreachable
														i.fa.fa-times.ml-2.text-danger

												if (item.proxy)
													span.text-muted.ml-3 (proxy: #{item.proxy})

							td.properties-header Local Addresses
							td.text-monospace
								if (global.getnetworkinfo.localaddresses)
									each item, index in global.getnetworkinfo.localaddresses
										div #{item.address}:#{item.port}
											span.text-muted.ml-3 (score: #{item.score.toLocaleString()})

							

			div(id="tab-json", class="tab-pane", role="tabpanel")

				ul.nav.nav-pills.mb-3
					li.nav-item
						a(data-toggle="tab", href="#tab-getblockchaininfo", class="nav-link active", role="tab") getblockchaininfo
					li.nav-item
						a(data-toggle="tab", href="#tab-getnettotals", class="nav-link", role="tab") getnettotals
					li.nav-item
						a(data-toggle="tab", href="#tab-getnetworkinfo", class="nav-link", role="tab") getnetworkinfo
				
				div.tab-content
					div(id="tab-getblockchaininfo", class="tab-pane active", role="tabpanel")
						pre
							code.json.bg-light(data-lang="json") #{JSON.stringify(getblockchaininfo, null, 4)}

					div(id="tab-getnettotals", class="tab-pane", role="tabpanel")
						pre
							code.json.bg-light(data-lang="json") #{JSON.stringify(getnettotals, null, 4)}

					div(id="tab-getnetworkinfo", class="tab-pane", role="tabpanel")
						pre
							code.json.bg-light(data-lang="json") #{JSON.stringify(getnetworkinfo, null, 4)}
							
										